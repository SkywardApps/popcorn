# This is the configuration file for git-lab's CI service.
# We have five stages:
stages:
# Make sure everything compiles OK
 - build
# a test stage, which will execute all of the various unit and integration tests that are performed from within the project itself
 - test
# a stage where all test results will be integrated into TargetProcess, Confluence, and/or other central sites
 - uploadresults
# Option to upload an updated nuget package
 - deployment

# Build all three projects, minus the Net Framework project as it is windows/mono dependent.
build:
 stage: build
 image: microsoft/dotnet:2.2-sdk
 cache:
  key: linux-build
  paths:
    - /root/.local/share/NuGet/Cache
    - /root/.nuget/packages
    - .nuget
 script: 
  - cd dotnet/PopcornNetStandard
  - dotnet restore
  - dotnet build 
  - cd ../PopcornNetStandard.WebApiCore
  - dotnet restore
  - dotnet build
  - cd ../PopcornNetStandard.EntityFrameworkCore
  - dotnet restore
  - dotnet build
 tags:
  - x86

# Running the example test integration tests
popcornstandard_integrationtest:
 stage: test
 image: microsoft/dotnet:2.2-sdk
 cache:
  key: linux-build
  paths:
    - /root/.local/share/NuGet/Cache
    - /root/.nuget/packages
    - .nuget
 script: 
  - cd dotnet/Tests/PopcornNetCoreExampleIntegrationTest
  - dotnet restore
  - dotnet test
 tags:
  - x86

# Running the standard library tests
popcornstandard_unittest:
 stage: test
 image: mcr.microsoft.com/dotnet/core/sdk:3.1
 cache:
  key: linux-build
  paths:
    - /root/.local/share/NuGet/Cache
    - /root/.nuget/packages
    - .nuget
 script: 
  - cd dotnet/Tests/PopcornNetStandardTest
  - dotnet restore
  - dotnet test
 tags:
  - x86
    
  
# Create internal nuget package
package:
 stage: build
 image: microsoft/dotnet:2.2-sdk
 cache:
  key: linux-build
  paths:
    - /root/.local/share/NuGet/Cache
    - /root/.nuget/packages
    - .nuget
 only:
  - master
  - /^spike_/
 tags:
  - x86
 artifacts:
  when: always
  paths:
   - dotnet/publish
 script:
  # This assumes that Debug is the correct build to publish
  - cd dotnet
  - dotnet build --ignore-failed-sources -c ${PublishConfiguration:-Release}  PopcornNetStandard/PopcornNetStandard.csproj
  - dotnet build --ignore-failed-sources -c ${PublishConfiguration:-Release}  PopcornNetStandard.EntityFrameworkCore/PopcornNetStandard.EntityFrameworkCore.csproj
  - dotnet build --ignore-failed-sources -c ${PublishConfiguration:-Release}  PopcornNetStandard.WebApiCore/PopcornNetStandard.WebApiCore.csproj
  - dotnet build --ignore-failed-sources -c ${PublishConfiguration:-Release}  PopcornNet5.WebApp/PopcornNet5.WebApp.csproj
  - dotnet pack -c ${PublishConfiguration:-Release} --include-source --include-symbols  -p:SymbolPackageFormat=snupkg  --output ../publish PopcornNetStandard/PopcornNetStandard.csproj
  - dotnet pack -c ${PublishConfiguration:-Release} --include-source --include-symbols  -p:SymbolPackageFormat=snupkg  --output ../publish PopcornNetStandard.EntityFrameworkCore/PopcornNetStandard.EntityFrameworkCore.csproj
  - dotnet pack -c ${PublishConfiguration:-Release} --include-source --include-symbols  -p:SymbolPackageFormat=snupkg  --output ../publish PopcornNetStandard.WebApiCore/PopcornNetStandard.WebApiCore.csproj
  - dotnet pack -c ${PublishConfiguration:-Release} --include-source --include-symbols  -p:SymbolPackageFormat=snupkg  --output ../publish PopcornNet5.WebApp/PopcornNet5.WebApp.csproj

#Publish internal nuget package
nugetInternal:
    stage: deployment
    environment:
        name: internal_popcorn_nuget
        url: https://nuget.skywardapps.us/packages/Skyward.Api.Popcorn
    image: microsoft/dotnet:2.1-sdk
    cache:
      key: linux-build
      paths:
        - /root/.local/share/NuGet/Cache
        - /root/.nuget/packages
        - .nuget
    when: manual
    allow_failure: true
    only:
        - master
        - /^spike_/
    tags:
        - x86
    script:
    - cd dotnet
    - cd publish
    - for fileName in *.nupkg; do dotnet nuget push -s https://nuget.skywardapps.us/v3/index.json ${fileName}; done
    - for fileName in *.snupkg; do dotnet nuget push -s https://nuget.skywardapps.us/v3/index.json ${fileName}; done

nugetExternal:
    stage: deployment
    environment:
        name: public_popcorn_nuget
        url: https://www.nuget.org/packages/Skyward.Api.Popcorn
    image: microsoft/dotnet:2.1-sdk
    cache:
      key: linux-build
      paths:
        - /root/.local/share/NuGet/Cache
        - /root/.nuget/packages
        - .nuget
    when: manual
    allow_failure: true
    only:
        - master
    tags:
        - x86
    script:
    - cd dotnet
    - cd publish
    - for fileName in *.nupkg; do dotnet nuget push -k $NugetApiKey -s https://api.nuget.org/v3/index.json ${fileName} || :; done
    - for fileName in *.snupkg; do dotnet nuget push -k $NugetApiKey -s https://api.nuget.org/v3/index.json ${fileName} || :; done
